import Head from "next/head"
import Layout from "@/components/layout"

import { useState, useEffect } from "react";

import { v4 as uuidv4 } from 'uuid';

import IntroSpace from "@/components/spaces/intro"
import MainSpace from "@/components/spaces/main"
import DreamSpace from "@/components/spaces/dream"
import UpdatesSpace from "@/components/spaces/updates";

import NavIcons from "@/components/nav-icons";

import NavSignboard from "@/components/nav-signboard";

export default function Home() {

  const [ expandSky, setExpandSky ] = useState(false)
  const [ showSignpost, setShowSignpost ] = useState(false)

  // TODO: Collapse spaceIds and signs into gardenSpaces
  const spaceIds = ['main', 'updates', 'dream', 'intro']

  const [ mainId, dreamId, updatesId, introId ] = spaceIds

  const gardenSpaces = [
    <MainSpace expandSky={expandSky}/>, 
    <UpdatesSpace />,
    <DreamSpace/>, 
    <IntroSpace/>
  ]

  const layoutContainerWidth = gardenSpaces.length * 150
  const gardenSpaceWidth = layoutContainerWidth/gardenSpaces.length

  const signs = [
    {text: 'Main', navigateToId: mainId},
    {text: 'Updates', navigateToId: updatesId},
    {text: 'Dream', navigateToId: dreamId},
    {text: 'Intro', navigateToId: introId},
  ]

  // TODO: Don't just use main, check for the current id from the url
  const [ currentSpaceId, setCurrentSpaceId ] = useState('main')

  useEffect(() => {

    const gardenSpaceWidthPx = document.querySelector('.garden-space').getBoundingClientRect().width
    const scrollBarLength = gardenSpaceWidthPx - window.innerWidth

    const handleCurrentSpaceId = () => {
      const id = spaceIds[Math.floor((window.scrollX + scrollBarLength)/gardenSpaceWidthPx)]
    
      if(currentSpaceId === id) return
      else {
        setCurrentSpaceId(id)
        return
      }
    }

    window.addEventListener('scroll', handleCurrentSpaceId)
  
    return () => {
      window.removeEventListener('scroll', handleCurrentSpaceId)
    }
  }, [])


  return (
    <>
    <Head>
        <title>uzomas.garden</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout containerWidth={layoutContainerWidth}>
        { gardenSpaces.map((space, index) => 
          <div id={spaceIds[index]} className={`garden-space`} style={{ width: `${gardenSpaceWidth}%` }} key={uuidv4()}>
            {space}
          </div>
        )}
        <NavIcons expandSky={expandSky} setExpandSky={setExpandSky} 
          showSignpost={showSignpost} setShowSignpost={setShowSignpost}
        />
        { 
          showSignpost && 
            <NavSignboard 
              signs={signs} 
              spaceIds={spaceIds} 
              currentSpaceId={currentSpaceId} 
              setCurrentSpaceId={setCurrentSpaceId}
            />}
      </Layout>
    </>
  )
}
