import Head from "next/head"
import Layout from "@/components/layout"

import { useState, useEffect, useContext } from 'react'

import IntroSpace from "@/pages/intro"
import MainSpace from "@/pages/main"
import DreamSpace from "@/pages/dream"
import UpdatesSpace from "@/pages/updates";
import WorkSpace from "@/pages/work"

import NavIcons from "@/components/nav-icons";

import { ImArrowRight, ImArrowLeft } from "react-icons/im";

import NavSignboard from "@/components/nav-signboard";

import { AppStateContext } from "@/pages/_app"

export default function Home() {

  const [ expandSky, setExpandSky ] = useState(false)
  const [ showSignpost, setShowSignpost ] = useState(false)

  const [ currentSpaceIndex, setCurrentSpaceIndex ] = useState(0)

  const [ showWelcome, setShowWelcome ] = useState(false)

  const gardenSpaces = [
    {name: 'intro', component: <IntroSpace showWelcome={showWelcome} setShowWelcome={setShowWelcome} />},
    {name: 'projects', component: <MainSpace expandSky={expandSky}/>, spaceTitle: 'Thoughts & Ideas'}, 
    {name: 'updates', component: <UpdatesSpace/>, spaceTitle: 'Updatesss'},
    // {name: 'dream', component: <DreamSpace />, spaceTitle: 'Dreamsss *solange voice*'},
    // {name: 'work', component: <WorkSpace />, spaceTitle: 'Work'}
    // {name: 'dream', component: <DreamSpace/>}
  ]

  const layoutContainerWidth = 100

  const renderNavSigns = () => {
    const prev = <button onClick={() => setCurrentSpaceIndex(currentSpaceIndex - 1)}><ImArrowLeft /></button>
    const next = <button onClick={() => setCurrentSpaceIndex(currentSpaceIndex + 1)}><ImArrowRight /></button>

    const margin = 1
    const style = {
      display: 'flex',
      justifyContent: currentSpaceIndex > 0 && currentSpaceIndex < gardenSpaces.length ? 'space-between' : 'flex-end',
      position: 'absolute',
      margin: `0 ${margin}%`,
      width: `${layoutContainerWidth - (margin*2)}%`,
      top: '50%',
      // zIndex: '9999'
    }

    if(currentSpaceIndex === 0){ return <div style={style}>{next}</div> }
    else if(currentSpaceIndex === gardenSpaces.length -1 ){ return <div style={style}>{prev}</div> }
    else return <div style={style}>{prev}{next}</div>
  }

  const { setAppState } = useContext(AppStateContext)

  useEffect(() => {
    const currentVisitor = JSON.parse(window.localStorage.getItem('currentVisitor'))
    
    //Set the current visitor in app-wide state on component mount
    if(currentVisitor){
      setAppState((prevState) => ({
        ...prevState,
        currentVisitor
      }));
    } else {
      setShowWelcome(true)
    }

    return () => {}
  }, [])

  useEffect(() => {
      const isMobile = /Mobi|Android/i.test(navigator.userAgent);
      const isPortrait = window.matchMedia('(orientation: portrait)').matches;

      if (isMobile && isPortrait) {
        alert('Hey! You may enjoy the garden more if you rotate your phone and refresh');
      }
  }, []);

  const currentSpace = gardenSpaces[currentSpaceIndex]

  return (
    <>
      <Head>
        <title>uzomas.garden</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸŒ»</text></svg>"></link>
      </Head>
      <Layout containerWidth={layoutContainerWidth}>
        { currentSpace.spaceTitle && 
          <h1 style={{color: 'white', width: '100%', textAlign: 'center', position: 'absolute'}}>{currentSpace.spaceTitle}</h1>
        }
        { currentSpace.component }
        <NavIcons expandSky={expandSky} setExpandSky={setExpandSky} 
          showSignpost={showSignpost} setShowSignpost={setShowSignpost}
        />
        { 
          showSignpost && 
            <NavSignboard 
              gardenSpaces={gardenSpaces}
              currentSpaceIndex={currentSpaceIndex}
              setCurrentSpaceIndex={setCurrentSpaceIndex}
              setShowSignpost={setShowSignpost}
            />
        }
        { renderNavSigns() }
      </Layout>
    </>
  )
}
